{"version":3,"sources":["actions/trackers.js","reducers/trackers.js","reducers/index.js","selectors/index.js","services/index.js","sagas/trackers.js","sagas/index.js","store/index.js","components/TrackerForm/index.js","components/TrackerCard/index.js","components/Trackers/index.js","components/App/index.js","reportWebVitals.js","index.js"],"names":["SET_TRACKERS_DATA","GET_TRACKERS_DATA","ADD_TRACKER","DELETE_TRACKER","STOP_TRACKER","START_TRACKER","setTrackersData","trackersData","type","payload","initialState","combineReducers","trackers","state","tracker","filter","t","id","trackerId","map","stopDate","date","trackersDataSelector","saveToLocalStorage","localStorage","setItem","JSON","stringify","getTimeInterval","diff","hours","Math","trunc","minutes","seconds","getTimeDiff","moment","getTrackers","addTracker","deleteTracker","stopTracker","startTracker","trackersWatcher","parse","getItem","put","select","takeLatest","rootSaga","all","trackersSaga","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducers","applyMiddleware","run","mapDispatchToProps","connect","props","index","React","useState","name","setName","onSubmit","e","Date","now","trackerName","trackerDate","toISOString","preventDefault","Grid","Row","as","Input","fluid","value","onChange","target","size","placeholder","className","icon","Icon","link","color","onClick","timerId","setTimerId","timeInterval","setTimeInterval","handleStart","useCallback","stopTime","startDate","valueOf","handleStop","clearInterval","handleDelete","useEffect","setInterval","List","Item","Content","verticalAlign","Header","getTrackersData","trackersCards","centered","Column","computer","mobile","textAlign","length","divided","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56dc0daf.chunk.js","sourcesContent":["export const SET_TRACKERS_DATA =  \"SET_TRACKERS_DATA\";\nexport const GET_TRACKERS_DATA = \"GET_TRACKERS_DATA\";\n\nexport const ADD_TRACKER = \"ADD_TRACKER\";\nexport const DELETE_TRACKER = \"DELETE_TRACKER\";\nexport const STOP_TRACKER = \"STOP_TRACKER\";\nexport const START_TRACKER = \"START_TRACKER\";\n\nexport const getTrackersData = () => ({\n  type: GET_TRACKERS_DATA\n})\n\nexport const setTrackersData = (trackersData) => ({\n  type: SET_TRACKERS_DATA,\n  payload: { trackersData }\n})\n\nexport const addTracker = (tracker) => ({\n  type: ADD_TRACKER,\n  payload: { tracker }\n})\n\nexport const deleteTracker = (trackerId) => ({\n  type: DELETE_TRACKER,\n  payload: { trackerId }\n})\n\nexport const stopTracker = (trackerId, stopDate) => ({\n  type: STOP_TRACKER,\n  payload: { trackerId, stopDate }\n})\n\nexport const startTracker = (trackerId, date) => ({\n  type: START_TRACKER,\n  payload: { trackerId, date }\n})\n","import { SET_TRACKERS_DATA, ADD_TRACKER, DELETE_TRACKER, STOP_TRACKER, START_TRACKER } from \"../actions/trackers\";\n\nconst initialState = {\n\ttrackersData: [],\n};\n\nexport default function trackersReducer (state = initialState, { payload, type }) {\n\tswitch (type) {\n\t\tcase SET_TRACKERS_DATA: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttrackersData: payload.trackersData,\n\t\t\t}\n\n\t\tcase ADD_TRACKER: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttrackersData: [...state.trackersData, payload.tracker]\n\t\t\t}\n\n\t\tcase DELETE_TRACKER: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttrackersData: state.trackersData\n\t\t\t\t\t.filter(t => t.id !== payload.trackerId)\n\t\t\t}\n\n\t\tcase STOP_TRACKER: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttrackersData: state.trackersData.map(t => \n\t\t\t\t\tt.id === payload.trackerId \n\t\t\t\t\t\t? {...t, stopDate: payload.stopDate} \n\t\t\t\t\t\t: t\n\t\t\t\t)\n\t\t\t}\n\n\t\tcase START_TRACKER: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttrackersData: state.trackersData.map(t => \n\t\t\t\t\tt.id === payload.trackerId \n\t\t\t\t\t\t? {...t, date: payload.date, stopDate: null} \n\t\t\t\t\t\t: t\n\t\t\t\t)\n\t\t\t}\n\t\t\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { combineReducers } from \"redux\";\nimport trackers from './trackers';\n\nexport default combineReducers({\n  trackers\n});\n","export const trackersDataSelector = (state) => state.trackers.trackersData \n","import moment from \"moment\";\n\nexport const saveToLocalStorage = (trackersData) => {\n  localStorage.setItem('trackersData', JSON.stringify(trackersData));\n}\n\nexport const getTimeInterval = (date) => {\n  let diff = date / 1000;\n  let hours = Math.trunc(diff / 3600); \n  let minutes = Math.trunc((diff % 3600) / 60);\n  let seconds = Math.trunc((diff % 3600) % 60); \n\n  hours = hours < 10 ? '0' + hours : hours; \n  minutes = minutes < 10 ? '0' + minutes : minutes; \n  seconds = seconds < 10 ? '0' + seconds : seconds; \n\n  return `${hours}:${minutes}:${seconds}`;\n}\n\nexport const getTimeDiff = (date, stopDate) => (\n  stopDate\n    ? moment(stopDate).diff(moment(date))\n    : moment().diff(moment(date))\n)\n","import { put, select, takeLatest } from 'redux-saga/effects';\nimport { GET_TRACKERS_DATA, setTrackersData, ADD_TRACKER, DELETE_TRACKER, STOP_TRACKER, START_TRACKER } from '../actions/trackers';\nimport { trackersDataSelector } from '../selectors';\nimport { saveToLocalStorage } from '../services';\n\nexport function* getTrackers() {\n  let trackersData = yield JSON.parse(localStorage.getItem('trackersData'));\n  if(!trackersData) trackersData = [];\n  yield put(setTrackersData(trackersData));\n}\n\nexport function* addTracker({ payload }) {\n  const trackersData = yield select(trackersDataSelector)\n  yield saveToLocalStorage(trackersData)\n}\n\nexport function* deleteTracker({ payload }) {\n  const trackersData = yield select(trackersDataSelector);\n  yield saveToLocalStorage(trackersData)\n}\n\nexport function* stopTracker({ payload }) {\n  const trackersData = yield select(trackersDataSelector);\n  yield saveToLocalStorage(trackersData)\n}\n\nexport function* startTracker({ payload }) {\n  const trackersData = yield select(trackersDataSelector);\n  yield saveToLocalStorage(trackersData)\n}\n\nexport default function* trackersWatcher () {\n  yield takeLatest(GET_TRACKERS_DATA, getTrackers)\n\tyield takeLatest(ADD_TRACKER, addTracker)\n\tyield takeLatest(DELETE_TRACKER, deleteTracker)\n\tyield takeLatest(STOP_TRACKER, stopTracker)\n\tyield takeLatest(START_TRACKER, startTracker)\n}\n","import { all } from 'redux-saga/effects';\n\nimport trackersSaga from './trackers';\n\nexport default function* rootSaga() {\n  yield all([\n    trackersSaga()\n  ])\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from 'redux-saga'\nimport rootReducers from './../reducers';\nimport rootSaga from './../sagas';\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(rootReducers, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga)\n\nexport default store;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Input, Icon } from 'semantic-ui-react';\nimport { addTracker } from '../../actions/trackers';\n\nconst TrackerForm = (props) => {\n  const { index, addTracker } = props;\n  const [name, setName] = React.useState('');\n\n  const handleChange = (e) => setName(e.target.value)\n\n  const onSubmit = (e) => {\n    const trackerId = Date.now();\n    const trackerName = name ? name : `No name tracker #${index}`;\n    const trackerDate = new Date().toISOString();\n    const tracker = { \n            id: trackerId,\n            name: trackerName,\n            date: trackerDate,\n            stopDate: null  \n          };\n          \n    addTracker(tracker);\n    setName('');\n    e.preventDefault();\n  }\n\n  return (\n    <Grid.Row as='form' onSubmit={onSubmit}>\n      <Input\n        name='name'\n        fluid \n        value={name} \n        onChange={handleChange}\n        size='large'\n        placeholder='Enter tracker name...' \n        className='form'\n        icon>\n        <input />\n        <Icon \n          link\n          name='play circle'\n          size='big' \n          color='green'\n          onClick={onSubmit} \n        />\n      </Input>\n    </Grid.Row>\n  );\n}\n\nconst mapDispatchToProps = {\n  addTracker\n}\n\nexport default connect(null, mapDispatchToProps)(TrackerForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { List, Header, Icon } from 'semantic-ui-react';\nimport { deleteTracker, stopTracker, startTracker } from '../../actions/trackers';\nimport { getTimeInterval, getTimeDiff } from '../../services';\n\nconst TrackerCard = (props) => {\n  const { tracker: { id, name, date, stopDate }, deleteTracker, stopTracker, startTracker } = props;\n  const [timerId, setTimerId] = React.useState(null);\n  const [timeInterval , setTimeInterval] = React.useState(getTimeInterval(getTimeDiff(date, stopDate)));\n\n  const handleStart = React.useCallback(() => {\n      const stopTime = moment().diff(moment(stopDate))\n      const startDate = moment(date).valueOf() + stopTime\n\n      startTracker(id, new Date(startDate).toISOString());\n  }, [stopDate, startTracker, id, date]);\n\n  const handleStop = React.useCallback(() => {\n    clearInterval(timerId);\n    setTimerId(null);\n    stopTracker(id, new Date().toISOString());\n  }, [stopTracker, id, timerId]);\n\n  const handleDelete = React.useCallback(() => {\n    if(timerId) {\n      clearInterval(timerId);\n      setTimerId(null);\n    };\n    deleteTracker(id);\n  }, [id, timerId, deleteTracker]);\n\n  React.useEffect(() => {\n    if(!stopDate && !timerId) {\n      let timerId = setInterval(() => setTimeInterval(getTimeInterval(getTimeDiff(date, stopDate))), 1000);\n      setTimerId(timerId);\n    }\n  }, [stopDate, timerId, date]);\n\n  return (\n    <List.Item \n      className={stopDate\n        ? 'card'\n        : 'card card-active'}>\n      <List.Content \n        verticalAlign='bottom'\n        className='card-name'>\n        <Header \n          size='small'\n          color={stopDate ? 'black' : 'green'}>\n          {name}\n        </Header>\n      </List.Content>\n      <List.Content \n        verticalAlign='middle'\n        className='card-timer'>\n        <Header \n          size='small'\n          color={stopDate ? 'black' : 'green'}>\n          {timeInterval}\n        </Header>\n      </List.Content>\n      <List.Content \n        className='card-actions'>\n        <Icon \n          name={\n            stopDate ? 'play circle outline' : 'pause circle outline'\n          }\n          size='big' \n          color='black'\n          onClick={\n            stopDate ? handleStart : handleStop\n          }\n        />\n        <Icon \n          name='minus circle' \n          size='big' \n          color='red'\n          onClick={handleDelete}\n        />\n      </List.Content>\n    </List.Item>\n  );\n}\n\nconst mapDispatchToProps = {\n  deleteTracker,\n  stopTracker,\n  startTracker\n}\n\nexport default connect(null, mapDispatchToProps)(TrackerCard);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Header, List } from 'semantic-ui-react';\nimport TrackerForm from '../TrackerForm';\nimport TrackerCard from '../TrackerCard';\nimport { getTrackersData } from '../../actions/trackers';\n\nconst Trackers = (props) => {\n  const { trackersData, getTrackersData } = props;\n\n  React.useEffect(() => {\n    getTrackersData();\n  },[getTrackersData])\n\n  const trackersCards = trackersData\n    .map(tracker => <TrackerCard key={tracker.id} tracker={tracker}/>)\n\n  return (\n    <Grid centered>\n      <Grid.Column computer={6} mobile={16}>\n        <Grid.Row>\n          <Header \n            size='huge' \n            textAlign='center'\n            className='logo'>\n            tracker\n          </Header>\n        </Grid.Row>\n        <TrackerForm index={trackersData.length + 1}/>\n        <Grid.Row \n          as={List} \n          className='card-list'\n          divided>\n          {trackersCards}\n        </Grid.Row>\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nconst mapStateToProps = state => ({\n  trackersData: state.trackers.trackersData\n})\n\nconst mapDispatchToProps = {\n  getTrackersData\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Trackers);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from '../../store'\nimport Trackers from '../Trackers';\n\nconst App = () => (\n  <Provider store={store}>\n    <Trackers/>\n  </Provider>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}